-- ui library creation
local hintmsg = Instance.new("Hint", game.CoreGui)
local attempt = tick()
hintmsg.Text = "Initializing UI Library This Can Take Up To 30 Seconds"
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/framework/master/uwuware%20framework", true))()
local version = "2.1"
local uiname = "Pet Ranch 2 UI"
local ui = { }
local main = { }
local loopfunctions = { }
local vectorshub = { }
local notification = { }
local loops = { }
function GetCamera()
	return workspace:FindFirstChildOfClass("Camera")
end
local mouse = game.Players.LocalPlayer:GetMouse()
local TweenService = game:GetService("TweenService")
local Plrs = game.Players
local MyPlr = Plrs.LocalPlayer
local MyChar = MyPlr.Character
local MyCam = GetCamera()
local char = game.Players.LocalPlayer.Character
local Plrs = game:GetService("Players")
local Run = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local PlayerGui = game.Players.LocalPlayer.PlayerGui
local StartGui = game:GetService("StarterGui")
local Teams = game:GetService("Teams")
local g = MyPlr:FindFirstChild("PlayerGui") or MyPlr:WaitForChild("PlayerGui")
local sg = game:GetService("StarterGui")
local ps = game:GetService("Players")
local Light = game:GetService("Lighting")
local HTTP = game:GetService("HttpService")
local messages_of_the_day = nil

game:GetService("ScriptContext").Error:Connect(function(message)
	print("Reason: "..message)
	main:Console("Initializing Failed, Error; "..message)
	if message == "HttpError: ConnectFail" then
		main:Console("Initializing Failed; Code 4 | ReJoin")
	end
	wait(6)
	hintmsg:Remove()
end)

do -- notification
    function notification:Init()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/notification/master/createnotification", true))()
    end
    function notification:sendnotification(text)
        game.CoreGui.uwuware.Notification:TweenSize(UDim2.new(0, 1917,0, 26), "Out", "Linear", .2, true)
        wait(.2)
        for i = 1, #text do
            game.CoreGui.uwuware.Notification.Message.Text = string.sub(text, 1, i)
            wait(.03)
        end
        wait(.5)
        game.CoreGui.uwuware.Notification.Message.Text = ""
        game.CoreGui.uwuware.Notification:TweenSize(UDim2.new(0, 1917,0, 0), "Out", "Linear", .2, true)
    
    end
end
do -- loop functions 
    function loopfunctions:LoopRunning(name)
		return loops[name].Running
	end
	function loopfunctions:CreateLoop(name, func, waitt, ...)
		if loops[name] ~= nil then return end
		loops[name] = { }
		loops[name].Running = false
		loops[name].Destroy = false
		loops[name].Loop = coroutine.create(function(...)
			while true do
				if loops[name].Running then
					func(...)
				end

				if loops[name].Destroy then
					break
				end

				if type(wait) == "userdata" then
					waitt:wait()
				else
					wait(waitt)
				end
			end
		end)
	end
	function loopfunctions:RunLoop(name, func, waitt, ...)
		if loops[name] == nil then
			if func ~= nil then
				self:CreateLoop(name, func, waitt, ...)
			end
		end

		loops[name].Running = true
		local succ, out = coroutine.resume(loops[name].Loop)
		if not succ then
			warn("Loop: " .. tostring(name) .. " ERROR: " .. tostring(out))
		end
	end
	function loopfunctions:StopLoop(name)
		if loops[name] == nil then return end

		loops[name].Running = false
	end
	function loopfunctions:DestroyLoop(name)
		if loops[name] == nil then return end

		self:StopLoop(name)
		loops[name].Destroy = true

		loops[name] = nil
	end
end
do -- loops
    loopfunctions:CreateLoop("Time", function()
        local timedata = os.date("*t")
        _G.usertime = tostring(timedata.hour..";"..timedata.min..";"..timedata.sec)
    end, Run.RenderStepped:wait())
    loopfunctions:RunLoop("Version_Check", function()
        local data = loadstring(game:HttpGet("https://pastebin.com/raw/MhwMYaFu", true))()
        messages_of_the_day = data.messages_of_the_day
        data = data["Pet Ranch 2"]
        local current_version, reason = data.version, data.reason
        if version ~= current_version then
            if data.force_kick then
                MyPlr:Kick("This script has updated, please re-connect. Current Version: " .. tostring(current_version) .. " your version: " .. version .. "\nReason: " .. reason)
            else
                notification:sendnotification("Minor script update, restart ROBLOX to get latest version. Reason:" .. reason)
                main:SystemChat("Minor script update, restart ROBLOX to get latest version. Reason:" .. reason)
            end
        end
    end, 160)
    loopfunctions:RunLoop("Messages Of The Day", function()
        if messages_of_the_day == nil then return end
        for i = 1, #messages_of_the_day do
            main:SystemChat(tostring(messages_of_the_day[i]))
            wait(60)
        end
    end, Run.RenderStepped)
    loopfunctions:CreateLoop("Auto Delete Unlocked Pets", function()
        for i,v in pairs(MyPlr.PlayerGui.MainGui.CenterUIFrame.PetInventory.PetInventoryInnerFrame.PetInventoryScrollingFrame:GetChildren()) do
            if v:IsA("ImageButton") and not v.PetLock.Visible then
                main.petstable[v.Name] = true
                local args = {
                    [1] = "MassDeletePetsFromInventory",
                    [2] = main.petstable
                }
                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(unpack(args))
            end
        end
    end, 0)
    loopfunctions:CreateLoop("Auto Open Egg", function()
        local args = {"BuyEgg", library.flags["selectedegg"]}
        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(unpack(args))
    end, 0)
    loopfunctions:CreateLoop("Auto Shiny", function()
        for i,v in pairs(game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.PetInventory.PetInventoryInnerFrame.PetInventoryScrollingFrame:GetChildren()) do
            if v:IsA("ImageButton") then
                local args = {
                    [1] = "MakeShinyPet",
                    [2] = v.Name,
                    [3] = library.flags["chosenpettoshine"],
                }
                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(unpack(args))
            end
        end
    end, 0)
    loopfunctions:CreateLoop("Auto Starry", function()
        for i,v in pairs(game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.PetInventory.PetInventoryInnerFrame.PetInventoryScrollingFrame:GetChildren()) do
            if v:IsA("ImageButton") then
                local args = {
                    [1] = "MakeStarryPet",
                    [2] = v.Name,
                    [3] = library.flags["chosenpettostarry"],
                }
                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(unpack(args))
            end
        end
    end, 0)
    loopfunctions:CreateLoop("Auto Collect Pet Coins", function()
        for i,v in pairs(game.Players.LocalPlayer.PlayerGui.BubbleGuis:GetDescendants()) do
            if v.Name == "ImageButton" then
                if v.Parent.Enabled == true then
                    main:fireButton1(v)
                end
            end
        end
    end, 0)
    loopfunctions:CreateLoop("Auto Spin Wheel", function()
        local args = {
            [1] = "GenerateRewardWheelResult",
        }
        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(unpack(args))
    end, 0)
    loopfunctions:CreateLoop("Auto Rebirth", function()
        local args = {
            [1] = "RebirthPlayer",
            [2] = tonumber(library.flags["rebirthamount"]),
            [3] = UDim2.new( 0, 1022 ,  0, 333 ),
            [4] = false,
        }
        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(unpack(args))
    end, 0)
    loopfunctions:CreateLoop("Auto Equip Pets", function()
        local args = {
            [1] = "EquipTopPets",
        }
        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(unpack(args))
    end, 0)
    loopfunctions:CreateLoop("Auto Play Flying Pet", function()
        for i,v in pairs(game.workspace:WaitForChild("FlappyMinigame"):GetChildren()) do
            if v.Name == "Coin" then
                game:GetService("Workspace").FlappyMinigame.FlappyPet.Anchored = false
                game:GetService("Workspace").FlappyMinigame.FlappyPet.CFrame = CFrame.new(v.Position)
                wait()
                game:GetService("Workspace").FlappyMinigame.FlappyPet.Anchored = true
            end
        end
    end, 0)
    loopfunctions:CreateLoop("Auto Play Meteor Dash", function()
        for i,v in pairs(game.workspace:WaitForChild("HelicopterMinigame"):GetChildren()) do
            game:GetService("Workspace").HelicopterMinigame.PetModel.CFrame = CFrame.new(-194.285, 1383.424, 830.342)
            wait()
            game:GetService("Workspace").HelicopterMinigame.PetModel.Anchored = true
        end
    end, 0)
    loopfunctions:CreateLoop("Auto Play Pet Rush", function()
        for i,v in pairs(game.workspace:WaitForChild("PetRushMinigame"):GetChildren()) do
            if v:FindFirstChild("Crystal") then
                game:GetService("Workspace").PetRushMinigame.PetModel.CFrame = CFrame.new(v.Root.Position)
                wait(0.1)
                game:GetService("Workspace").PetRushMinigame.PetModel.CFrame = CFrame.new(1,1,1)
            end
        end
    end, 0)
end
do -- main
    main.espsettings = {
        TracersLength = 500;
        CHAMSLength = 500;
        ESPLength = 10000;
        Blacklist = { };
        FriendList = { };
        Colors = {
            Enemy = Color3.fromRGB(221, 3, 255);
            Ally = Color3.fromRGB(221, 3, 255);
            Friend = Color3.fromRGB(221, 3, 255);
            Neutral = Color3.fromRGB(255,255,255);
            ColorOverride = nil;
        };
        CharAddedEvent = { };
        Mob_ESP_CHAMS_Ran_Once = false;
    };
    main.creator_accounts = {
        [278723686] = true;
    };
    main.admin_accounts = {
        [425451555] = true;
        [516093458] = true;
    };
    main.whitelisted_accounts = {
        [278723686] = true;
        [425451555] = true;
        [516093458] = true;
        [454446503] = true;
        [807746976] = true;
        [311446911] = true;
        [534973588] = true;
    };
    main.petstable = { };
    main.eggstable = { };
    main.petnames = { };
    main.starrypetnames = { };
    if main.espsettings.CHAMSLength > 2048 then
        main.espsettings.CHAMSLength = 2048
    end;
    if main.espsettings.TracersLength > 2048 then
        main.espsettings.TracersLength = 2048
    end;
    splitline = Instance.new("Frame")
    main.ESPFolder = Instance.new("Folder", CoreGui)
    main.ESPFolder.Name = "ESP Stuff"
    main.ItemChams = Instance.new("Folder", main.ChamsFolder);
    main.ItemChams.Name = "ItemChams";
    main.Tracers = Instance.new("Folder", MyCam);
    main.Tracers.Name = "Tracers";
    main.PlayerESP = Instance.new("Folder", main.ESPFolder)
    main.PlayerESP.Name = "PlayerESP"
    main.ChamsFolder = Instance.new("Folder", CoreGui);
    main.ChamsFolder.Name = "Chams";
    main.ItemESP = Instance.new("Folder", main.ESPFolder)
    main.ItemESP.Name = "ItemESP"
    main.PlayerChams = Instance.new("Folder", main.ChamsFolder);
    main.PlayerChams.Name = "PlayerChams";
	main.TracerData = { };
	main.TracerMT = setmetatable(main.TracerData, {
		__newindex = function(tab, index, val)
			rawset(tab, index, val)
		end
    });
    main.vflyspeed = 1
    main.vehicleflyspeed = 1
    function main:Console(text)
        hintmsg.Text = text
    end
    function main:SystemChat(txt)
        sg:SetCore("ChatMakeSystemMessage",
        {
            Text = "Vect0rs; ".. txt,
            Color = Color3.new(248, 118, 37),
            Font = Enum.Font.Cartoon,
            TextSize = 18
        })
        local msg = g.Chat:GetDescendants()
        repeat
            for i, v in next, msg do
                if v:IsA("TextLabel") or v:IsA("TextButton") then
                    if v.Text == "Vect0rs; ".. txt then
                        msg = v
                    end
                end
            end
            Run.RenderStepped:wait()
        until type(msg) ~= "table"
        local n = 0
        spawn(function()
            while msg.Text == "Vect0rs; " .. txt do
                msg.TextColor3 = Color3.fromHSV(n, 0.4, 1)
                n = (n + 0.01) % 1
                Run.RenderStepped:wait()
            end
        end)
    end
    function main:vectorshub()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/ui-library-test/master/watermark", true))()
        textbuttonthing = game.CoreGui.uwuware:WaitForChild("watermark").Text
        textbuttonthing.MouseButton1Down:Connect(function()
            library:Close()
        end)
        splitline.Name = "Line"
        splitline.Parent = game.CoreGui:WaitForChild("uwuware")
        splitline.BackgroundColor3 = Color3.fromRGB(221, 3, 255)
        splitline.BorderSizePixel = 0
        splitline.Size = UDim2.new(0, 1917, 0, 5)
    end
    function main:infothing()
        if game.Players.LocalPlayer.UserId == 278723686 then
            _G.role = "[dev]"
            _G.username = "Vect0rs"
        elseif game.Players.LocalPlayer.UserId == 425451555 then
            _G.role = "[staff]"
            _G.username = "Smail"
        else
            _G.role = "[member]"
            _G.username = MyPlr.Name
        end
        loadstring(game:HttpGet("https://pastebin.com/raw/MH2ki4NT", true))()
    end
    function main:fireButton1(button)
        for i,signal in next, getconnections(button.MouseButton1Down) do
            signal:Fire()
        end
    end
    function main:fullbright()
        if library.flags.FullBright then
            notification:sendnotification("FullBright Enabled")
            local bloom = Instance.new("BloomEffect");
            bloom.Enabled = true;
            bloom.Intensity = 0.55;
            bloom.Size = 30;
            bloom.Threshold = 0.95;
            bloom.Parent = game.Lighting;
            local colorcorrection = Instance.new("ColorCorrectionEffect");
            colorcorrection.Enabled = true;
            colorcorrection.Brightness = 0;
            colorcorrection.Contrast = 0;
            colorcorrection.Saturation = 1;
            colorcorrection.TintColor = Color3.fromRGB(255,255,255);
            colorcorrection.Parent = game.Lighting;
            local sunrays = Instance.new("SunRaysEffect");
            sunrays.Enabled = true;
            sunrays.Intensity = 0.4;
            sunrays.Spread = 1;
            sunrays.Parent = game.Lighting;
        else
            notification:sendnotification("FullBright Disabled")
            for i,v in pairs(game.Lighting:GetChildren()) do
                if v:IsA("BloomEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
                    v:Destroy();
                end
            end
        end
    end
    function main:GetSizeOfObject(Obj)
        if Obj:IsA("BasePart") then
            return Obj.Size
        elseif Obj:IsA("Model") then
            return Obj:GetExtentsSize()
        end
    end
    function main:GetTeamColor(Plr)
        if Plr == nil then return nil end
        if not Plr:IsA("Player") then
            return nil
        end
        local PickedColor = main.espsettings.Colors.Enemy
        if Plr ~= nil then
            if game.PlaceId == 606849621 then
                if settings.Colors.ColorOverride == nil then
                    if not settings.FreeForAll then
                        if MyPlr.Team ~= nil and Plr.Team ~= nil then
                            if settings.FriendList[Plr.Name] == nil then
                                if MyPlr.Team.Name == "Prisoner" then
                                    if Plr.Team == MyPlr.Team or Plr.Team.Name == "Criminal" then
                                        PickedColor = settings.Colors.Ally
                                    else
                                        PickedColor = settings.Colors.Enemy
                                    end
                                elseif MyPlr.Team.Name == "Criminal" then
                                    if Plr.Team == MyPlr.Team or Plr.Team.Name == "Prisoner" then
                                        PickedColor = settings.Colors.Ally
                                    else
                                        PickedColor = settings.Colors.Enemy
                                    end
                                elseif MyPlr.Team.Name == "Police" then
                                    if Plr.Team == MyPlr.Team then
                                        PickedColor = settings.Colors.Ally
                                    else
                                        if Plr.Team.Name == "Criminal" then
                                            PickedColor = settings.Colors.Enemy
                                        elseif Plr.Team.Name == "Prisoner" then
                                            PickedColor = settings.Colors.Neutral
                                        end
                                    end
                                end
                            else
                                PickedColor = settings.Colors.Friend
                            end
                        end
                    else
                        if settings.FriendList[Plr.Name] ~= nil then
                            PickedColor = settings.Colors.Friend
                        else
                            PickedColor = settings.Colors.Enemy
                        end
                    end
                else
                    PickedColor = settings.Colors.ColorOverride
                end
            elseif game.PlaceId == 155615604 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if MyPlr.Team ~= nil and Plr.Team ~= nil then
                        if main.espsettings.FriendList[Plr.Name] == nil then
                            if MyPlr.Team.Name == "Inmates" then
                                if Plr.Team.Name == "Inmates" then
                                    PickedColor = main.espsettings.Colors.Ally
                                elseif Plr.Team.Name == "Guards" or Plr.Team.Name == "Criminals" then
                                    PickedColor = main.espsettings.Colors.Enemy
                                else
                                    PickedColor = main.espsettings.Colors.Neutral
                                end
                            elseif MyPlr.Team.Name == "Guards" then
                                if Plr.Team.Name == "Inmates" then
                                    PickedColor = main.espsettings.Colors.Neutral
                                elseif Plr.Team.Name == "Criminals" then
                                    PickedColor = main.espsettings.Colors.Enemy
                                elseif Plr.Team.Name == "Guards" then
                                    PickedColor = main.espsettings.Colors.Ally
                                end
                            elseif MyPlr.Team.Name == "Criminals" then
                                if Plr.Team.Name == "Inmates" then
                                    PickedColor = main.espsettings.Colors.Ally
                                elseif Plr.Team.Name == "Guards" then
                                    PickedColor = main.espsettings.Colors.Enemy
                                else
                                    PickedColor = main.espsettings.Colors.Neutral
                                end
                            end
                        else
                            PickedColor = main.espsettings.Colors.Friend
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 746820961 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if MyPlr:FindFirstChild("TeamC") and Plr:FindFirstChild("TeamC") then
                        if Plr.TeamC.Value == MyPlr.TeamC.Value then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Enemy
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 1382113806 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if MyPlr:FindFirstChild("role") and Plr:FindFirstChild("role") then
                        if MyPlr.role.Value == "assassin" then
                            if Plr.role.Value == "target" then
                                PickedColor = main.espsettings.Colors.Enemy
                            elseif Plr.role.Value == "guard" then
                                PickedColor = Color3.new(1, 135 / 255, 0)
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        elseif MyPlr.role.Value == "target" then
                            if Plr.role.Value == "guard" then
                                PickedColor = main.espsettings.Colors.Ally
                            elseif Plr.role.Value == "assassin" then
                                PickedColor = main.espsettings.Colors.Enemy
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        elseif MyPlr.role.Value == "guard" then
                            if Plr.role.Value == "target" then
                                PickedColor = main.espsettings.Colors.Friend
                            elseif Plr.role.Value == "guard" then
                                PickedColor = main.espsettings.Colors.Ally
                            elseif Plr.role.Value == "assassin" then
                                PickedColor = main.espsettings.Colors.Enemy
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        else
                            if MyPlr.role.Value == "none" then
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 1072809192 then
                if MyPlr:FindFirstChild("Backpack") and Plr:FindFirstChild("Backpack") then
                    if MyPlr.Backpack:FindFirstChild("Knife") or MyChar:FindFirstChild("Knife") then
                        if Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = Color3.new(1, 135 / 255, 0)
                        end
                    elseif MyPlr.Backpack:FindFirstChild("Revolver") or MyChar:FindFirstChild("Revolver") then
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = main.espsettings.Colors.Ally
                        end
                    else
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Neutral
                        end
                    end
                end
            elseif game.PlaceId == 142823291 or game.PlaceId == 1122507250 then
                if MyPlr:FindFirstChild("Backpack") and Plr:FindFirstChild("Backpack") then
                    if MyPlr.Backpack:FindFirstChild("Knife") or MyChar:FindFirstChild("Knife") then
                        if (Plr.Backpack:FindFirstChild("Gun") or Plr.Backpack:FindFirstChild("Revolver")) or (Plr.Character:FindFirstChild("Gun") or Plr.Character:FindFirstChild("Revolver")) then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = Color3.new(1, 135 / 255, 0)
                        end
                    elseif (MyPlr.Backpack:FindFirstChild("Gun") or MyPlr.Backpack:FindFirstChild("Revolver")) or (MyChar:FindFirstChild("Gun") or MyChar:FindFirstChild("Revolver")) then
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = main.espsettings.Colors.Ally
                        end
                    else
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif (Plr.Backpack:FindFirstChild("Gun") or Plr.Backpack:FindFirstChild("Revolver")) or (Plr.Character:FindFirstChild("Gun") or Plr.Character:FindFirstChild("Revolver")) then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Neutral
                        end
                    end
                end
            elseif game.PlaceId == 379614936 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if not main.espsettings.FriendList[Plr.Name] then
                        local targ = MyPlr:FindFirstChild("PlayerGui"):FindFirstChild("ScreenGui"):FindFirstChild("UI"):FindFirstChild("Target"):FindFirstChild("Img"):FindFirstChild("PlayerText")
                        if targ then
                            if Plr.Name:lower() == targ.Text:lower() then
                                PickedColor = main.espsettings.Colors.Enemy
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        else
                            PickedColor = main.espsettings.Colors.Neutral
                        end
                    else
                        PickedColor = main.espsettings.Colors.Friend
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 983224898 then
                if (tick() - wildrevolvertick) > 10 or wildrevolverteamdata == nil then
                    wildrevolverteamdata = RepStor.Functions.RequestGameData:InvokeServer()
                    wildrevolvertick = tick()
                    return main.espsettings.Colors.Neutral
                end
                local succ = pcall(function()
                    if wildrevolverteamdata[Plr.Name] ~= nil then
                        if main.espsettings.Colors.ColorOverride == nil then
                            if not main.espsettings.FriendList[Plr.Name] then
                                if wildrevolverteamdata[Plr.Name]["TeamName"] == wildrevolverteamdata[MyPlr.Name]["TeamName"] then
                                    PickedColor = main.espsettings.Colors.Ally
                                else
                                    PickedColor = main.espsettings.Colors.Enemy
                                end
                            else
                                PickedColor = main.espsettings.Colors.Friend
                            end
                        else
                            PickedColor = main.espsettings.Colors.ColorOverride
                        end
                    else
                        PickedColor = main.espsettings.Colors.Neutral
                    end
                end)
                if not succ then
                    wildrevolverteamdata = RepStor.Functions.RequestGameData:InvokeServer()
                    wildrevolvertick = tick()
                    return main.espsettings.Colors.Neutral
                end
            else
                if main.espsettings.Colors.ColorOverride == nil then
                    if not main.espsettings.FreeForAll then
                        if MyPlr.Team ~= Plr.Team and not main.espsettings.FriendList[Plr.Name] then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif MyPlr.Team == Plr.Team and not main.espsettings.FriendList[Plr.Name] then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Friend
                        end
                    else
                        if main.espsettings.FriendList[Plr.Name] ~= nil then
                            PickedColor = main.espsettings.Colors.Friend
                        else
                            PickedColor = main.espsettings.Colors.Enemy
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            end
        end
        return PickedColor
    end
    function main:CreateESP(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemESP
            local GetChar = ((IsPlr) and Obj.Character) or Obj
            local Head = GetChar:FindFirstChild("Head")
            local t = tick()
            if IsPlr then UseFolder = main.PlayerESP end
            if Head == nil then
                repeat
                    Head = GetChar:FindFirstChild("Head")
                    wait()
                until Head ~= nil or (tick() - t) >= 10
            end
            if Head == nil then return end
            
            local bb = Instance.new("BillboardGui")
            bb.Adornee = Head
            bb.ExtentsOffset = Vector3.new(0, 1, 0)
            bb.AlwaysOnTop = true
            bb.Size = UDim2.new(0, 5, 0, 5)
            bb.StudsOffset = Vector3.new(0, 3, 0)
            bb.Name = "ESP Crap_" .. Obj.Name
            bb.Parent = UseFolder
            
            local frame = Instance.new("Frame", bb)
            frame.ZIndex = 10
            frame.BackgroundTransparency = 1
            frame.Size = UDim2.new(1, 0, 1, 0)
            
            local TxtName = Instance.new("TextLabel", frame)
            TxtName.Name = "Names"
            TxtName.ZIndex = 10
            TxtName.Text = Obj.Name
            TxtName.BackgroundTransparency = 1
            TxtName.Position = UDim2.new(0, 0, 0, -45)
            TxtName.Size = UDim2.new(1, 0, 10, 0)
            TxtName.Font = "SourceSansBold"
            TxtName.TextSize = 13
            TxtName.TextStrokeTransparency = 0.5
  
            local TxtDist = nil
            local TxtHealth = nil
            if IsPlr then
                TxtDist = Instance.new("TextLabel", frame)
                TxtDist.Name = "Dist"
                TxtDist.ZIndex = 10
                TxtDist.Text = ""
                TxtDist.BackgroundTransparency = 1
                TxtDist.Position = UDim2.new(0, 0, 0, -35)
                TxtDist.Size = UDim2.new(1, 0, 10, 0)
                TxtDist.Font = "SourceSansBold"
                TxtDist.TextSize = 13
                TxtDist.TextStrokeTransparency = 0.5
  
                TxtHealth = Instance.new("TextLabel", frame)
                TxtHealth.Name = "Health"
                TxtHealth.ZIndex = 10
                TxtHealth.Text = ""
                TxtHealth.BackgroundTransparency = 1
                TxtHealth.Position = UDim2.new(0, 0, 0, -25)
                TxtHealth.Size = UDim2.new(1, 0, 10, 0)
                TxtHealth.Font = "SourceSansBold"
                TxtHealth.TextSize = 13
                TxtHealth.TextStrokeTransparency = 0.5
            else
                local ObjVal = Instance.new("ObjectValue", bb)
                ObjVal.Value = Obj
            end
            
            local PickColor = main:GetTeamColor(Obj) or main.espsettings.Colors.Neutral
            TxtName.TextColor3 = PickColor
  
            if IsPlr then
                TxtDist.TextColor3 = PickColor
                TxtHealth.TextColor3 = PickColor
            end
        end
    end
    function main:RemoveESP(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemESP
            if IsPlr then UseFolder = main.PlayerESP end
            local FindESP = ((IsPlr) and UseFolder:FindFirstChild("ESP Crap_" .. Obj.Name)) or main:FindESP(Obj)
            if FindESP then
                FindESP:Destroy()
            end
        end
    end
    function main:UpdateESP(Plr)
        if Plr ~= nil then
            local Find = main.PlayerESP:FindFirstChild("ESP Crap_" .. Plr.Name)
            if Find then
                local PickColor = main:GetTeamColor(Plr)
                Find.Frame.Names.TextColor3 = PickColor
                Find.Frame.Dist.TextColor3 = PickColor
                Find.Frame.Health.TextColor3 = PickColor
                --Find.Frame.Pos.TextColor3 = PickColor
                local GetChar = Plr.Character
                if MyChar and GetChar then
                    local Find2 = MyChar:FindFirstChild("HumanoidRootPart")
                    local Find3 = GetChar:FindFirstChild("HumanoidRootPart")
                    local Find4 = GetChar:FindFirstChildOfClass("Humanoid")
                    if Find2 and Find3 then
                        local pos = Find3.Position
                        local Dist = (Find2.Position - pos).magnitude
                        if Dist > main.espsettings.ESPLength or main.espsettings.Blacklist[Plr.Name] then
                            Find.Frame.Names.Visible = false
                            Find.Frame.Dist.Visible = false
                            Find.Frame.Health.Visible = false
                            return
                        else
                            Find.Frame.Names.Visible = true
                            Find.Frame.Dist.Visible = true
                            Find.Frame.Health.Visible = true
                        end
                        Find.Frame.Dist.Text = "Distance: " .. string.format("%.0f", Dist)
                        --Find.Frame.Pos.Text = "(X: " .. string.format("%.0f", pos.X) .. ", Y: " .. string.format("%.0f", pos.Y) .. ", Z: " .. string.format("%.0f", pos.Z) .. ")"
                        if Find4 then
                            Find.Frame.Health.Text = "Health: " .. string.format("%.0f", Find4.Health)
                        else
                            Find.Frame.Health.Text = ""
                        end
                    end
                end
            end
        end
    end
    function main:FindESP(Obj)
        for i, v in next, main.ItemESP:GetChildren() do
            if v.className == "ObjectValue" then
                if v.Value == Obj then
                    return v.Parent
                end
            end
        end
        return nil
    end
    function main:FindCham(Obj)
        for i, v in next, main.ItemChams:GetChildren() do
            if v.className == "ObjectValue" then
                if v.Value == Obj then
                    return v.Parent
                end
            end
        end
        return nil
    end
    function main:UpdateChams(Obj)
        if Obj == nil then return end

        if Obj:IsA("Player") then
            local Find = PlayerChams:FindFirstChild(Obj.Name)
            local GetChar = Obj.Character
  
            local Trans = 0
            if GetChar and MyChar then
                local GetHead = GetChar:FindFirstChild("Head")
                local GetTor = GetChar:FindFirstChild("HumanoidRootPart")
                local MyHead = MyChar:FindFirstChild("Head")
                local MyTor = MyChar:FindFirstChild("HumanoidRootPart")
                if GetHead and GetTor and MyHead and MyTor then
                    if (MyTor.Position - GetTor.Position).magnitude > settings.CHAMSLength or settings.Blacklist[Obj.Name] then
                        Trans = 1
                    else
                        --local MyCharStuff = MyChar:GetDescendants()
                        local Ray = Ray.new(MyCam.CFrame.p, (GetTor.Position - MyCam.CFrame.p).unit * 2048)
                        local part = workspace:FindPartOnRayWithIgnoreList(Ray, {MyChar})
                        if part ~= nil then
                            if part:IsDescendantOf(GetChar) then
                                Trans = 0.9
                            else
                                Trans = 0
                            end
                        end
                    end
                end
            end
  
            if Find then
                for i, v in next, Find:GetChildren() do
                    if v.className ~= "ObjectValue" then
                        v.Color3 = main.GetTeamColor(Obj) or main.espsettings.Colors.Neutral
                        v.Transparency = Trans
                    end
                end
            end
        end
    end
    function main:RemoveChams(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemChams
            if IsPlr then UseFolder = main.PlayerChams end
            local FindC = UseFolder:FindFirstChild(tostring(Obj)) or main:FindCham(Obj)
            if FindC then
                FindC:Destroy()
            end
        end
    end
    function main:CreateChams(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemChams
            local Crap = nil
            local GetTor = nil
            local t = tick()
            if IsPlr then
                Obj = Obj.Character
                UseFolder = main.PlayerChams
            end
            if Obj == nil then return end
            GetTor = Obj:FindFirstChild("HumanoidRootPart") or Obj:WaitForChild("HumanoidRootPart")
            if IsPlr then Crap = Obj:GetChildren() else Crap = Obj:GetDescendants() end
  
            local FindC = ((IsPlr) and UseFolder:FindFirstChild(Obj.Name)) or main:FindCham(Obj)
            if not FindC then
                FindC = Instance.new("Folder", UseFolder)
                FindC.Name = Obj.Name
                local ObjVal = Instance.new("ObjectValue", FindC)
                ObjVal.Value = Obj
            end
  
            for _, P in next, Crap do
                if P:IsA("PVInstance") and P.Name ~= "HumanoidRootPart" then
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Size = main:GetSizeOfObject(P)
                    Box.Name = "Cham"
                    Box.Adornee = P
                    Box.AlwaysOnTop = true
                    Box.ZIndex = 5
                    Box.Transparency = 0
                    Box.Color3 = ((IsPlr) and main:GetTeamColor(Plrs:GetPlayerFromCharacter(Obj))) or main.espsettings.Colors.Neutral
                    Box.Parent = FindC
                end
            end
        end
    end
    function main:UpdateTracer(Plr)
        if library.flags.TracersTog then
            if MyChar then
                local MyTor = MyChar:FindFirstChild("HumanoidRootPart")
                local GetTor = main.TracerData[Plr.Name]
                if MyTor and GetTor ~= nil and GetTor.Parent ~= nil then
                    local Dist = (MyTor.Position - GetTor.Position).magnitude
                    if (Dist < main.espsettings.TracersLength and not main.espsettings.Blacklist[Plr.Name]) and not (MyChar:FindFirstChild("InVehicle") or GetTor.Parent:FindFirstChild("InVehicle")) then
                        if not main.espsettings.PlaceTracersUnderCharacter then
                            local R = MyCam:ScreenPointToRay(MyCam.ViewportSize.X / 2, MyCam.ViewportSize.Y, 0)
                            Dist = (R.Origin - (GetTor.Position - Vector3.new(0, 3, 0))).magnitude
                            main.Tracers[Plr.Name].Transparency = 1
                            main.Tracers[Plr.Name].Size = Vector3.new(0.05, 0.05, Dist)
                            main.Tracers[Plr.Name].CFrame = CFrame.new(R.Origin, (GetTor.Position - Vector3.new(0, 4.5, 0))) * CFrame.new(0, 0, -Dist / 2)
                            main.Tracers[Plr.Name].BrickColor = BrickColor.new(main:GetTeamColor(Plr))
                            main.Tracers[Plr.Name].BoxHandleAdornment.Transparency = 0
                            main.Tracers[Plr.Name].BoxHandleAdornment.Size = Vector3.new(0.001, 0.001, Dist)
                            main.Tracers[Plr.Name].BoxHandleAdornment.Color3 = main:GetTeamColor(Plr)
                        else
                            Dist = (MyTor.Position - (GetTor.Position - Vector3.new(0, 3, 0))).magnitude
                            main.Tracers[Plr.Name].Transparency = 1
                            main.Tracers[Plr.Name].Size = Vector3.new(0.3, 0.3, Dist)
                            main.Tracers[Plr.Name].CFrame = CFrame.new(MyTor.Position - Vector3.new(0, 3, 0), (GetTor.Position - Vector3.new(0, 4.5, 0))) * CFrame.new(0, 0, -Dist / 2)
                            main.Tracers[Plr.Name].BrickColor = BrickColor.new(main:GetTeamColor(Plr))
                            main.Tracers[Plr.Name].BoxHandleAdornment.Transparency = 0
                            main.Tracers[Plr.Name].BoxHandleAdornment.Size = Vector3.new(0.05, 0.05, Dist)
                            main.Tracers[Plr.Name].BoxHandleAdornment.Color3 = main:GetTeamColor(Plr)
                        end
                    else
                        main.Tracers[Plr.Name].Transparency = 1
                        main.Tracers[Plr.Name].BoxHandleAdornment.Transparency = 1
                    end
                end
            end
        end
    end
    function main:RemoveTracers(Plr)
        local Find = main.Tracers:FindFirstChild(Plr.Name)
        if Find then
            Find:Destroy()
        end
    end
    function main:CreateTracers(Plr)
        local Find = main.Tracers:FindFirstChild(Plr.Name)
        if not Find then
            local P = Instance.new("Part")
            P.Name = Plr.Name
            P.Material = "Neon"
            P.Transparency = 1
            P.Anchored = true
            P.Locked = true
            P.CanCollide = false
            local B = Instance.new("BoxHandleAdornment", P)
            B.Adornee = P
            B.Size = main:GetSizeOfObject(P)
            B.AlwaysOnTop = true
            B.ZIndex = 5
            B.Transparency = 0
            B.Color3 = main:GetTeamColor(Plr) or main.espsettings.Colors.Neutral
            P.Parent = main.Tracers
  
            coroutine.resume(coroutine.create(function()
                while main.Tracers:FindFirstChild(Plr.Name) do
                    main:UpdateTracer(Plr)
                    Run.RenderStepped:wait()
                end
            end))
        end
    end
    function main:updatecolors()
        do
            if library.flags["ESPTog"] then
                for _, v in next, Plrs:GetPlayers() do
                    if v ~= MyPlr then
                        if main.espsettings.CharAddedEvent[v.Name] == nil then
                            main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                                    repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                                    main.TracerMT[v.Name] = Char.HumanoidRootPart
                                    end)
                                end
                        main:RemoveESP(v)
                        main:CreateESP(v)
                    end
                end
            else return end
            if library.flags["ChamsTog"] then
                for _, v in next, Plrs:GetPlayers() do
                    if v ~= MyPlr then
                        if main.espsettings.CharAddedEvent[v.Name] == nil then
                            main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                                    repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                                    main.TracerMT[v.Name] = Char.HumanoidRootPart
                                    end)
                                end
                        main:RemoveChams(v)
                        main:CreateChams(v)
                    end
                end
            else return end
        end
    end
    function main:esptoggle()
        if library.flags.ESPTog then
            notification:sendnotification("ESP Enabled")
            for _, v in next, Plrs:GetPlayers() do
                    if v ~= MyPlr then
                        if main.espsettings.CharAddedEvent[v.Name] == nil then
                            main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                            if library.flags.ESPTog then
                                main:RemoveESP(v)
                                main:CreateESP(v)
                            end
                            repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                                main.TracerMT[v.Name] = Char.HumanoidRootPart
                            end)
                        end
                    main:RemoveESP(v)
                    main:CreateESP(v)
                end
            end
        else
            main.PlayerESP:ClearAllChildren()
            main.ItemESP:ClearAllChildren()
            notification:sendnotification("ESP Disabled")
        end
    end
    function main:chamstoggle()
        if library.flags.ChamsTog then
            for _, v in next, Plrs:GetPlayers() do
                if v ~= MyPlr then
                    if main.espsettings.CharAddedEvent[v.Name] == nil then
                        main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                            if library.flags.ChamsTog then
                                main:RemoveChams(v)
                                main:CreateChams(v)
                            end
                            repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                            main.TracerMT[v.Name] = Char.HumanoidRootPart
                        end)
                    end
                    main:RemoveChams(v)
                    main:CreateChams(v)
                end
            end
            notification:sendnotification("Chams Enabled")
            else
            main.PlayerChams:ClearAllChildren()
            main.ItemChams:ClearAllChildren()
            notification:sendnotification("Chams Disabled")
        end
    end
    function main:tracerstoggle()
        if library.flags["TracersTog"] then
            warn("tracers enabled")
            for _, v in next, Plrs:GetPlayers() do
                if v ~= MyPlr then
                    if main.espsettings.CharAddedEvent[v.Name] == nil then
                        main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                            if library.flags["TracersTog"] then
                                main:RemoveTracers(v)
                                main:CreateTracers(v)
                            end
                        end)
                    end
                    if v.Character ~= nil then
                    local Tor = v.Character:FindFirstChild("HumanoidRootPart")
                        if Tor then
                            main.TracerMT[v.Name] = Tor
                        end
                    end
                    main:RemoveTracers(v)
                    main:CreateTracers(v)
                end
            end
            notification:sendnotification("Tracers Enabled")
            else
            warn("tracers disabled")
            for _, v in next, Plrs:GetPlayers() do
                main:RemoveTracers(v)
            end
            notification:sendnotification("Tracers Disabled")
        end
    end
    function main:superspeed()
        if library.flags.SuperSpeed then
            MyChar.Humanoid.WalkSpeed = 90
            notification:sendnotification("SuperSpeed Enabled")
        else
            MyChar.Humanoid.WalkSpeed = 16
            notification:sendnotification("SuperSpeed Disabled")
        end
    end
    function main:superjump()
        if library.flags.SuperJump then
            MyChar.Humanoid.JumpPower = 150
            notification:sendnotification("SuperJump Enabled")
        else
            MyChar.Humanoid.JumpPower = 50
            notification:sendnotification("SuperJump Disabled")
        end
    end
    function main:walkspeed(value)
        MyChar.Humanoid.WalkSpeed = value
    end
    function main:jumppower(value)
        MyChar.Humanoid.JumpPower = value
    end
    function main:flyenable(vfly)
        repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid')
        repeat wait() until mouse
  
        local T = game.Players.LocalPlayer.Character.HumanoidRootPart
        local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local SPEED = 0
  
        local function FLY()
            library.flags["flytog"] = true
            local BG = Instance.new('BodyGyro', T)
            local BV = Instance.new('BodyVelocity', T)
            BG.P = 9e4
            BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            BG.cframe = T.CFrame
            BV.velocity = Vector3.new(0, 0, 0)
            BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
            spawn(function()
                repeat wait()
                if not vfly then
                    game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
                end
                if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                    SPEED = 50
                elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                    SPEED = 0
                end
                if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                    BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                    lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
                elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
                    BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                else
                    BV.velocity = Vector3.new(0, 0, 0)
                end
                BG.cframe = workspace.CurrentCamera.CoordinateFrame
                until not library.flags["flytog"]
                CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                SPEED = 0
                BG:destroy()
                BV:destroy()
                game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            end)
        end
        mouse.KeyDown:connect(function(KEY)
            if KEY:lower() == 'w' then
                if vfly then
                    CONTROL.F = main.vehicleflyspeed
                else
                    CONTROL.F = main.vflyspeed
                end
            elseif KEY:lower() == 's' then
                if vfly then
                    CONTROL.B = - main.vehicleflyspeed
                else
                    CONTROL.B = - main.vflyspeed
                end
            elseif KEY:lower() == 'a' then
                if vfly then
                    CONTROL.L = - main.vehicleflyspeed
                else
                    CONTROL.L = - main.vflyspeed
                end
            elseif KEY:lower() == 'd' then
                if vfly then
                    CONTROL.R = main.vehicleflyspeed
                else
                    CONTROL.R = main.vflyspeed
                end
            elseif KEY:lower() == 'e' then
                if vfly then
                    CONTROL.Q = main.vehicleflyspeed*2
                else
                    CONTROL.Q = main.vflyspeed*2
                end
            elseif KEY:lower() == 'q' then
                if vfly then
                    CONTROL.E = -main.vehicleflyspeed*2
                else
                    CONTROL.E = -main.vflyspeed*2
                end
            end
        end)
        mouse.KeyUp:connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = 0
            elseif KEY:lower() == 's' then
                CONTROL.B = 0
            elseif KEY:lower() == 'a' then
                CONTROL.L = 0
            elseif KEY:lower() == 'd' then
                CONTROL.R = 0
            elseif KEY:lower() == 'e' then
                CONTROL.Q = 0
            elseif KEY:lower() == 'q' then
                CONTROL.E = 0
            end
        end)
        FLY()
    end
    function main:flydisable()
        library.flags["flytog"] = false
        game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false  
    end
    function main:flytoggle()
        if library.flags["flytog"] then
            main:flyenable()
            notification:sendnotification("Fly Enabled")
        else
            main:flydisable()
            notification:sendnotification("Fly Disabled")
        end
    end
    function main:vehicleflytoggle()
        if library.flags["vflytog"] then
            main:flyenable(true)
            notification:sendnotification("Vehicle Fly Enabled")
        else
            main:flydisable()
            notification:sendnotification("Vehicle Fly Disabled")
        end
    end
    function main:lowgravity()
        if library.flags["lowgrav"] then
            workspace.Gravity = 50
            notification:sendnotification("Low Gravity Enabled")
        else
            workspace.Gravity = 196
            notification:sendnotification("Low Gravity Disabled")
        end
    end
    function main:gravity(val)
        workspace.Gravity = val
    end
    function main.tables()
        for i,v in pairs(MyPlr.PlayerGui.MainGui.CenterUIFrame.EggMasteryFrame.EggMasteryScrollingFrame:GetChildren()) do
            if v:IsA("ImageButton") then
                table.insert(main.eggstable, v.Name)
            end
        end
        for i,v in pairs(game.ReplicatedStorage.PetDirectory:GetChildren()) do
            if not v.Name:match("Shiny") or v.Name:match("Starry") then
                table.insert(main.petnames, v.Name)
            end
        end
        for i,v in pairs(game.ReplicatedStorage.PetDirectory:GetChildren()) do
            if v.Name:match("Shiny") then
                table.insert(main.starrypetnames, v.Name)
            end
        end
        warn('done tables')
    end
    function main:CollectCoins()
        if library.flags["collectcoinstoggle"] then
            loopfunctions:RunLoop("Auto Collect Pet Coins")
            notification:sendnotification("Auto Collect Pet Coins Enabled")
        else
            loopfunctions:StopLoop("Auto Collect Pet Coins")
            notification:sendnotification("Auto Collect Pet Coins Disabled")
        end
    end
    function main:AutoSpinWheel()
        if library.flags["autospinwheel"] then
            loopfunctions:RunLoop("Auto Spin Wheel")
            notification:sendnotification("Auto Spin Wheel Enabled")
        else
            loopfunctions:StopLoop("Auto Spin Wheel")
            notification:sendnotification("Auto Spin Wheel Disabled")
        end
    end
    function main:AutoRebirth()
        if library.flags["autorebirthtog"] then
            loopfunctions:RunLoop("Auto Rebirth")
            notification:sendnotification("Auto Rebirth Enabled")
        else
            loopfunctions:StopLoop("Auto Rebirth")
            notification:sendnotification("Auto Rebirth Disabled")
        end
    end
    function main:AutoEquipPets()
        if library.flags["autoequippets"] then
            loopfunctions:RunLoop("Auto Equip Pets")
            notification:sendnotification("Auto Equip Pets Enabled")
        else
            loopfunctions:StopLoop("Auto Equip Pets")
            notification:sendnotification("Auto Equip Pets Disabled")
        end
    end
    function main:AutoPlayFlyPet()
        if library.flags["autoplayflyingpet"] then
            loopfunctions:RunLoop("Auto Play Flying Pet")
            notification:sendnotification("Auto Play Flying Pet Enabled")
        else
            loopfunctions:StopLoop("Auto Play Flying Pet")
            notification:sendnotification("Auto Play Flying Pet Disabled")
        end
    end
    function main:AutoPlayPetRush()
        if library.flags["autoplaypetrush"] then
            loopfunctions:RunLoop("Auto Play Pet Rush")
            notification:sendnotification("Auto Play Pet Rush Enabled")
        else
            loopfunctions:StopLoop("Auto Play Pet Rush")
            notification:sendnotification("Auto Play Pet Rush Disabled")
        end
    end
    function main:AutoPlayMeteorDash()
        if library.flags["autoplaymeteordash"] then
            loopfunctions:RunLoop("Auto Play Meteor Dash")
            notification:sendnotification("Auto Play Meteor Dash Enabled")
        else
            loopfunctions:StopLoop("Auto Play Meteor Dash")
            notification:sendnotification("Auto Play Meteor Dash Disabled")
        end
    end
    function main:Bhop()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/zerovectors/bhop/master/bhop%20test',true))()
    end
    function main:ReJoin()
        game:GetService('TeleportService'):Teleport(game.PlaceId)
    end
    function main:AutoOpenEgg()
        if library.flags["autoopeneggtog"] then
            MyChar.HumanoidRootPart.CFrame = CFrame.new(-239.654449, 691.778076, 495.660187, 0.504483938, -3.64727732e-08, 0.863421082, 2.05211825e-09, 1, 4.10431404e-08, -0.863421082, -1.8933763e-08, 0.504483938)
            wait(.2)
            loopfunctions:RunLoop("Auto Open Egg")
            notification:sendnotification("Auto Open Egg Enabled")
        else
            loopfunctions:StopLoop("Auto Open Egg")
            notification:sendnotification("Auto Open Egg Disabled")
        end
    end
    function main:AutoDeletePets()
        if library.flags["autodeleteunlockedpets"] then
            loopfunctions:RunLoop("Auto Delete Unlocked Pets")
            notification:sendnotification("Auto Delete Unlocked Pets Enabled")
        else
            loopfunctions:StopLoop("Auto Delete Unlocked Pets")
            notification:sendnotification("Auto Delete Unlocked Pets Disabled")
        end
    end
    function main:AutoShinyPet()
        if library.flags["autoshinypettog"] then
            loopfunctions:RunLoop("Auto Shiny")
            notification:sendnotification("Auto Shiny Pet Enabled")
        else
            loopfunctions:StopLoop("Auto Shiny")
            notification:sendnotification("Auto Shiny Pet Disabled")
        end
    end
    function main:AutoStarryPet()
        if library.flags["autostarrypettog"] then
            loopfunctions:RunLoop("Auto Starry")
            notification:sendnotification("Auto Starry Pet Enabled")
        else
            loopfunctions:StopLoop("Auto Starry")
            notification:sendnotification("Auto Starry Pet Disabled")
        end
    end
    function main:cursorcolor(val)
        game.CoreGui.uwuware.Cursor.ImageColor3 = val
    end
    function main:CursorTog()
        if library.flags["CursorTog"] then
            game.CoreGui.uwuware.Cursor.Visible = library.flags["CursorTog"]
        else
            game.CoreGui.uwuware.Cursor.Visible = library.flags["CursorTog"]
        end
    end
    function main:splitlinecolor(val)
        splitline.BackgroundColor3 = val
    end
    function main:splitlinetransparency(val)
        splitline.BackgroundTransparency = val / 100
    end
    function main:splitlinethickness(val)
        splitline.Size = UDim2.new(0, 1917, 0, val*3)
    end
    function main:loadspy()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/remote-spys/master/sentinel_spy", true))()
    end
    function main:darkdex()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/dex/master/dark%20dex%20v3", true))()
    end
    function main:sentineldex()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/vect0rshub/master/sentinel%20dex", true))()
    end
    function main:getregs()
        for i,v in next, debug.getregistry() do
            if type(v) == 'function' then
                if getfenv(v).script then
                    table.foreach(debug.getupvalues(v), print)
                    print(getfenv(v).script:GetFullName() .. '\n')
                end
            end
        end
    end
    function main:destroyhint()
        hintmsg:Remove()
    end
    Plrs.PlayerAdded:Connect(function(Plr)
        if main.espsettings.CharAddedEvent[Plr.Name] == nil then
            main.espsettings.CharAddedEvent[Plr.Name] = Plr.CharacterAdded:connect(function(Char)
                if library.flags["TracersTog"] then
                    main:CreateTracers(Plr)
                end
                if library.flags["ChamsTog"] then
                    main:CreateChams(Plr)
                end
                if library.flags["ESPTog"] then
                    main:RemoveESP(Plr)
                    main:CreateESP(Plr)
                end
                repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                main.TracerMT[Plr.Name] = Char.HumanoidRootPart
            end)
        end
        if main.creator_accounts[Plr.UserId] then
            notification:sendnotification("Max Has Joined Your Server!")
        elseif main.admin_accounts[Plr.UserId] then
            notification:sendnotification("Smail Has Joined Your Server!")
        end
    end)
    Plrs.PlayerRemoving:Connect(function(Plr)
        if main.espsettings.CharAddedEvent[Plr.Name] ~= nil then
            main.espsettings.CharAddedEvent[Plr.Name]:Disconnect()
            main.espsettings.CharAddedEvent[Plr.Name] = nil
        end
        if main.creator_accounts[Plr.UserId] then
            notification:sendnotification("Max Has Left Your Server!")
        elseif main.admin_accounts[Plr.UserId] then
            notification:sendnotification("Smail Has Left Your Server!")
        end
        main:RemoveTracers(Plr)
        main:RemoveChams(Plr)
        main:RemoveESP(Plr)
        main.TracerMT[Plr.Name] = nil
    end)
end
do -- ui
    function ui:Init()
        do -- visuals
            ui.visuals = library:CreateWindow("Visuals")
            ui.visuals:AddToggle({text = "FullBright", flag = "FullBright", callback = function(a)
                library.flags.FullBright = a
                main:fullbright()
            end})
            ui.visuals:AddToggle({text = "ESP", flag = "ESPTog", callback = function(a)
                library.flags.ESPEnabled = a
                main:esptoggle()
            end})
            ui.visuals:AddToggle({text = "Chams", flag = "ChamsTog", callback = function(a)
                library.flags.ChamsTog = a
                main:chamstoggle()
            end})
            ui.visuals:AddToggle({text = "Tracers", flag = "TracersTog", callback = function(a)
                library.flags.TracersTog = a
                main:tracerstoggle()
            end})
            ui.espsettings = ui.visuals:AddFolder("ESP Settings")
            ui.espsettings:AddColor({text = "Ally Color", flag = "allycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Ally = a
                main:updatecolors()
            end})
            ui.espsettings:AddColor({text = "Enemy Color", flag = "enemycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Enemy = a
                main:updatecolors()
            end})
            ui.espsettings:AddColor({text = "Neutral Color", flag = "enemycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Neutral = a
                main:updatecolors()
            end})
        end
        do -- character
            ui.character = library:CreateWindow("Character")
            ui.character:AddToggle({text = "SuperSpeed", flag = "SuperSpeed", callback = function(a)
                library.flags.SuperSpeed = a
                main:superspeed()
            end})
            ui.character:AddToggle({text = "SuperJump", flag = "JumpPower", callback = function(a)
                library.flags.SuperJump = a
                main:superjump()
            end})
            ui.character:AddSlider({text = "WalkSpeed", value = 16, min = 0, max = 150, callback = function(a) 
                main:walkspeed(a)
            end})
            ui.character:AddSlider({text = "JumpPower", value = 50, min = 0, max = 200, callback = function(a) 
                main:jumppower(a)
            end})
            ui.character:AddToggle({text = "Fly", flag = "flytog", callback = function(a)
                library.flags["flytog"] = a
                main:flytoggle()
            end})
        end
        do -- miscellaneous
            ui.miscellaneous = library:CreateWindow("Miscellaneous")
            ui.miscellaneous:AddToggle({text = "Low Gravity", flag = "lowgrav", callback = function(a)
                library.flags["lowgrav"] = a
                main:lowgravity()
            end})
            ui.miscellaneous:AddSlider({text = "Gravity", value = 196, min = 0, max = 196, callback = function(a) 
                main:gravity(a)
            end})
            ui.miscellaneous:AddToggle({text = "Auto Collect Pet Coins", flag = "collectcoinstoggle", callback = function(a)
                library.flags["collectcoinstoggle"] = a
                main:CollectCoins()
            end})
            ui.miscellaneous:AddToggle({text = "Auto Spin Wheel", flag = "autospinwheel", callback = function(a)
                library.flags["autospinwheel"] = a
                main:AutoSpinWheel()
            end})
            ui.miscellaneous:AddBox({text = "Rebirth Amount", flag = "rebirthamount", value = "1", callback = function(a)
                library.flags["rebirthamount"] = a
            end})
            ui.miscellaneous:AddToggle({text = "Auto Rebirth", flag = "autorebirthtog", callback = function(a)
                library.flags["autorebirthtog"] = a
                main:AutoRebirth()
            end})
            ui.miscellaneous:AddToggle({text = "Auto Play Flying Pet", flag = "autoplayflyingpet", callback = function(a)
                library.flags["autoplayflyingpet"] = a
                main:AutoPlayFlyPet()
            end})
            ui.miscellaneous:AddToggle({text = "Auto Play Meteor Dash", flag = "autoplaymeteordash", callback = function(a)
                library.flags["autoplaymeteordash"] = a
                main:AutoPlayMeteorDash()
            end})
            ui.miscellaneous:AddToggle({text = "Auto Play Pet Rush", flag = "autoplaypetrush", callback = function(a)
                library.flags["autoplaypetrush"] = a
                main:AutoPlayPetRush()
            end})
            ui.miscellaneous:AddButton({text = "ReJoin", callback = function()
                main:ReJoin()
            end})
        end
        do -- pets / eggs
            ui.pets = library:CreateWindow("Pets / Eggs")
            ui.pets:AddList({text = "Selected Egg", flag = "selectedegg", values = main.eggstable, callback = function(a)
                library.flags["selectedegg"] = a
            end})
            ui.pets:AddToggle({text = "Auto Open Egg", flag = "autoopeneggtog", callback = function(a)
                library.flags["autoopeneggtog"] = a
                main:AutoOpenEgg()
            end})
            ui.pets:AddToggle({text = "Auto Delete Unlocked Pets", flag = "autodeleteunlockedpets", callback = function(a)
                library.flags["autodeleteunlockedpets"] = a
                main:AutoDeletePets()
            end})
            ui.pets:AddList({text = "Auto Shiny Pet", flag = "chosenpettoshine", values = main.petnames, callback = function(a)
                library.flags["chosenpettoshine"] = a
            end})
            ui.pets:AddToggle({text = "Auto Shiny Pet", flag = "autoshinypettog", callback = function(a)
                library.flags["autoshinypettog"] = a
                main:AutoShinyPet()
            end})
            ui.pets:AddList({text = "Auto Starry Pet", flag = "chosenpettostarry", values = main.starrypetnames, callback = function(a)
                library.flags["chosenpettostarry"] = a
            end})
            ui.pets:AddToggle({text = "Auto Starry Pet", flag = "autostarrypettog", callback = function(a)
                library.flags["autostarrypettog"] = a
                main:AutoStarryPet()
            end})
            ui.pets:AddToggle({text = "Auto Equip Best Pets", flag = "autoequippets", callback = function(a)
                library.flags["autoequippets"] = a
                main:AutoEquipPets()
            end})
        end
        do -- ui settings
            main.uisettings = library:CreateWindow("UI Settings")
            main.uisettings:AddColor({text = "Cursor Color", flag = "cursorcolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main:cursorcolor(a)
            end})
            if main.creator_accounts[MyPlr.UserId] or main.admin_accounts[MyPlr.UserId] then
                main.uisettings:AddToggle({text = "Cursor", state = true, flag = "CursorTog", callback = function(a)
                    library.flags["CursorTog"] = a
                    main:CursorTog()
                end})
                main.uisettings:AddToggle({text = "UI Watermark", state = true, callback = function(a)
                    game.CoreGui:WaitForChild("uwuware").watermark.Visible = a
                end})
            end
            main.uisettings:AddBind({text = "Toggle UI", key = "Q", callback = function() 
                library:Close()
            end})
            main.topbar = main.uisettings:AddFolder("Top Bar")
            main.topbar:AddColor({text = "Line Colour", flag = "color", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main:splitlinecolor(a)
            end})
            main.topbar:AddSlider({text = "Transparency", value = 0, min = 0, max = 100, callback = function(a)
                main:splitlinetransparency(a)
            end})
            main.topbar:AddSlider({text = "Line Thickness", value = 1, min = 1, max = 4, callback = function(a)
                main:splitlinethickness(a)
            end})
        end
        do -- developer options
            if main.creator_accounts[MyPlr.UserId] then
                main.developer = library:CreateWindow("Developer")
                main.developer:AddButton({text = "Remote Spy", callback = function()
                    main:loadspy()
                end})
                main.developer:AddButton({text = "Dark Dex v3", callback = function()
                    main:darkdex()
                end})
                main.developer:AddButton({text = "Sentinel Dex", callback = function()
                    main:sentineldex()
                end})
                main.developer:AddButton({text = "Get Registry", callback = function()
                    main:getregs()
                end})
            end
        end
    end
end

main:SystemChat("Okie, gimme a few secs to setup the ui uwu")
main.tables()
ui:Init()
library:Init()
library:Close()
main:vectorshub()
notification:Init()
loopfunctions:RunLoop("Time")
main:Console("Initialization Complete, Enjoy 😎")
attempt = tick()
main:destroyhint()
notification:sendnotification("Vect0rs Hub Loaded "..uiname.." v"..version)
main:SystemChat("Andd Done, Have Fun Or Whatever")
main:SystemChat("Loaded "..uiname)
main:SystemChat("Version "..version)
main:infothing()
